name: ⚙️ Continuous Integration

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

jobs:
  lint-python:
    name: 🐍 Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: 📦 Install Python linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: 🔬 Run flake8
        run: |
          # Excluir build_native.py del linting y usar lint_helper.py en su lugar
          flake8 lint_helper.py prepare_tests.py --count --select=E9,F63,F7,F82 --show-source --statistics

  lint-cpp:
    name: ⚙️ Lint C/C++ Code
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5
      - name: 📦 Install cpplint
        run: pip install cpplint
      - name: 🔬 Run cpplint
        # Adjust path to source files as needed, assuming 'src' and 'include'
        run: cpplint --recursive src include

  build-firmware:
    name: 🧱 Build Firmware
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: 📦 Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      - name: 🏗️ Build PlatformIO Project
        # Assuming 'mega' is a common or default environment, con excepciones habilitadas
        run: |
          # Actualizar la configuración para habilitar excepciones
          sed -i 's/-fno-exceptions/-fexceptions/g' platformio.ini
          # Si no existe la flag de excepciones, agregarla
          if ! grep -q "fexceptions" platformio.ini; then
            sed -i '/build_flags/a \\\t-fexceptions' platformio.ini
          fi
          pio run -e mega

  run-platformio-tests:
    name: 🧪 Run PlatformIO Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v5
      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: 📦 Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install platformio
      - name: 🧪 Run PlatformIO Tests
        # Assuming 'native' is the environment for unit tests, con excepciones habilitadas
        run: |
          # Actualizar la configuración para habilitar excepciones
          sed -i 's/-fno-exceptions/-fexceptions/g' platformio.ini
          # Si no existe la flag de excepciones, agregarla
          if ! grep -q "fexceptions" platformio.ini; then
            sed -i '/build_flags/a \\\t-fexceptions' platformio.ini
          fi
          pio test -e native
